{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'REQUEST_LOGIN':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isLoading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        error: null\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    // Здесь может быть реализована проверка действительности токена\n    if (token) {\n      // Предполагается, что данные пользователя уже сохранены в состоянии или localStorage\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user: null\n        }\n      }); // Обновите для включения данных пользователя, если они доступны\n    }\n  }, []);\n  const login = async (username, password) => {\n    dispatch({\n      type: 'REQUEST_LOGIN'\n    });\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const {\n          token,\n          user\n        } = await response.json();\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Не удалось войти в систему');\n      }\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const authContextValue = {\n    ...state,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","isLoading","error","authReducer","state","action","type","localStorage","setItem","payload","removeItem","AuthProvider","children","_s","dispatch","getItem","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","json","errorData","Error","message","logout","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  error: null,\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'REQUEST_LOGIN':\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isLoading: false,\n        error: null,\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        error: null,\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    // Здесь может быть реализована проверка действительности токена\n    if (token) {\n      // Предполагается, что данные пользователя уже сохранены в состоянии или localStorage\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { token, user: null } }); // Обновите для включения данных пользователя, если они доступны\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    dispatch({ type: 'REQUEST_LOGIN' });\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        const { token, user } = await response.json();\n        dispatch({ type: 'LOGIN_SUCCESS', payload: { token, user } });\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Не удалось войти в систему');\n      }\n    } catch (error) {\n      dispatch({ type: 'LOGIN_ERROR', payload: error.message });\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const authContextValue = {\n    ...state,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}