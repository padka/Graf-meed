{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchUserData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/users/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Убедимся, что ответ не пустой, прежде чем пытаться разобрать его как JSON\n      if (response.ok && response.status !== 204) {\n        const text = await response.text();\n        // Проверим, не пустой ли текст ответа\n        if (text) {\n          const userData = JSON.parse(text);\n          setUser(userData);\n        } else {\n          throw new Error('Пустой ответ от сервера');\n        }\n      } else {\n        throw new Error('Ошибка аутентификации. Пожалуйста, войдите снова.');\n      }\n    } catch (error) {\n      setError(error.message);\n      setToken(null);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [token]);\n\n  // Функция для входа\n  const login = async (username, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Произошла ошибка при аутентификации.');\n      }\n      setToken(data.token);\n      localStorage.setItem('token', data.token);\n      await fetchUserData();\n    } catch (error) {\n      setError(error.message);\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Функция для выхода\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    setError(null);\n  };\n\n  // Объект, который будет доступен через контекст\n  const authContextValue = {\n    user,\n    token,\n    isLoading,\n    error,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"1YPxbvFEefbdE5QYZl6UyWjqI7U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","isLoading","setIsLoading","error","setError","fetchUserData","response","fetch","headers","ok","status","text","userData","JSON","parse","Error","message","removeItem","login","username","password","method","body","stringify","data","json","setItem","logout","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\nexport const AuthContext = createContext(null);\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchUserData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/users/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      // Убедимся, что ответ не пустой, прежде чем пытаться разобрать его как JSON\n      if (response.ok && response.status !== 204) {\n        const text = await response.text();\n        // Проверим, не пустой ли текст ответа\n        if (text) {\n          const userData = JSON.parse(text);\n          setUser(userData);\n        } else {\n          throw new Error('Пустой ответ от сервера');\n        }\n      } else {\n        throw new Error('Ошибка аутентификации. Пожалуйста, войдите снова.');\n      }\n    } catch (error) {\n      setError(error.message);\n      setToken(null);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [token]);\n  \n\n  // Функция для входа\n  const login = async (username, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Произошла ошибка при аутентификации.');\n      }\n\n      setToken(data.token);\n      localStorage.setItem('token', data.token);\n      await fetchUserData();\n    } catch (error) {\n      setError(error.message);\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Функция для выхода\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    setError(null);\n  };\n\n  // Объект, который будет доступен через контекст\n  const authContextValue = {\n    user,\n    token,\n    isLoading,\n    error,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}