{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/UserProfile/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [editingUser, setEditingUser] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/api/users').then(response => {\n      if (!response.ok) {\n        throw new Error(`Ошибка HTTP: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => setUsers(data)).catch(error => {\n      console.error('Error fetching users:', error);\n      setError('Ошибка при загрузке пользователей');\n    });\n  }, []);\n\n  // Начать редактирование пользователя\n  const onEdit = user => setEditingUser({\n    ...user\n  });\n\n  // Обработка отправки формы редактирования\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`/api/users/${editingUser.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(editingUser)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`Ошибка HTTP: ${response.status}`);\n      }\n      return response.json();\n    }).then(updatedUser => {\n      setUsers(users.map(user => user.id === updatedUser.id ? updatedUser : user));\n      setEditingUser(null);\n    }).catch(error => setError('Ошибка при обновлении пользователя'));\n  };\n\n  // Удаление пользователя\n  const deleteUser = userId => {\n    // Оптимистичное обновление UI\n    const updatedUsers = users.filter(user => user.id !== userId);\n    setUsers(updatedUsers);\n    fetch(`/api/users/${userId}`, {\n      method: 'DELETE'\n    }).catch(error => {\n      setError('Ошибка при удалении пользователя');\n      // Восстановление данных в случае ошибки\n      setUsers(users);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), editingUser && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"5sGmNQsIYfY309OS8L4rpuU+IEU=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminPanel","_s","users","setUsers","editingUser","setEditingUser","error","setError","fetch","then","response","ok","Error","status","json","data","catch","console","onEdit","user","handleSubmit","e","preventDefault","id","method","headers","body","JSON","stringify","updatedUser","map","deleteUser","userId","updatedUsers","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/UserProfile/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AdminPanel = () => {\n  const [users, setUsers] = useState([]);\n  const [editingUser, setEditingUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('/api/users')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Ошибка HTTP: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => setUsers(data))\n      .catch(error => {\n        console.error('Error fetching users:', error);\n        setError('Ошибка при загрузке пользователей');\n      });\n  }, []);\n  \n\n  // Начать редактирование пользователя\n  const onEdit = user => setEditingUser({ ...user });\n\n  // Обработка отправки формы редактирования\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`/api/users/${editingUser.id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(editingUser),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`Ошибка HTTP: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(updatedUser => {\n      setUsers(users.map(user => user.id === updatedUser.id ? updatedUser : user));\n      setEditingUser(null);\n    })\n    .catch(error => setError('Ошибка при обновлении пользователя'));\n  };\n\n  // Удаление пользователя\n  const deleteUser = userId => {\n    // Оптимистичное обновление UI\n    const updatedUsers = users.filter(user => user.id !== userId);\n    setUsers(updatedUsers);\n\n    fetch(`/api/users/${userId}`, { method: 'DELETE' })\n      .catch(error => {\n        setError('Ошибка при удалении пользователя');\n        // Восстановление данных в случае ошибки\n        setUsers(users);\n      });\n  };\n\n  return (\n    <div className=\"admin-panel\">\n      {error && <div className=\"error-message\">{error}</div>}\n      {editingUser && (\n        <form onSubmit={handleSubmit}>\n          {/* Форма редактирования */}\n        </form>\n      )}\n      <table>\n        {/* Таблица пользователей */}\n      </table>\n    </div>\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}