{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/Catalog/Catalog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useCart } from '../CartContext/CartContext';\nimport './Catalog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Catalog({\n  isHomePage = false\n}) {\n  _s();\n  const {\n    addToCart\n  } = useCart();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setError(null);\n      try {\n        const response = await fetch('/api/products');\n        if (!response.ok) {\n          throw new Error(`HTTP error: status ${response.status}`);\n        }\n        const result = await response.json();\n        if (result.success && Array.isArray(result.data)) {\n          setProducts(result.data);\n          // Extract categories for filtering\n          const extractedCategories = new Set(result.data.map(product => product.category));\n          setCategories(['all', ...extractedCategories]);\n        } else {\n          throw new Error('Data is not in expected format');\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setError(error.message);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleAddToCart = product => {\n    addToCart(product);\n    // Here you would implement the cart adding animation\n  };\n\n  // Filter products by selected category if not on the home page\n  const visibleProducts = isHomePage ? products.slice(0, 3) : selectedCategory === 'all' ? products : products.filter(product => product.category === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"catalog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"catalog-title\",\n      children: \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), !isHomePage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-form\",\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: Array.from(categories).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: visibleProducts.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"product-card\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: product.image,\n            alt: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: `${product.price} RUB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => handleAddToCart(product),\n              children: \"Add to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Catalog, \"Z+D0wHf8lnmy6Rd+F2Xq6/EmqH8=\", false, function () {\n  return [useCart];\n});\n_c = Catalog;\nexport default Catalog;\nvar _c;\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","useCart","jsxDEV","_jsxDEV","Catalog","isHomePage","_s","addToCart","products","setProducts","categories","setCategories","selectedCategory","setSelectedCategory","error","setError","fetchProducts","response","fetch","ok","Error","status","result","json","success","Array","isArray","data","extractedCategories","Set","map","product","category","console","message","handleAddToCart","visibleProducts","slice","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","from","xs","sm","md","lg","Img","variant","src","image","alt","title","Body","Title","Text","price","onClick","id","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/Catalog/Catalog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useCart } from '../CartContext/CartContext';\nimport './Catalog.css';\n\nfunction Catalog({ isHomePage =false}) {\n    const { addToCart } = useCart();\n    const [products, setProducts] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('all');\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            setError(null);\n            try {\n                const response = await fetch('/api/products');\n                if (!response.ok) {\n                    throw new Error(`HTTP error: status ${response.status}`);\n                }\n                const result = await response.json();\n                if (result.success && Array.isArray(result.data)) {\n                    setProducts(result.data);\n                    // Extract categories for filtering\n                    const extractedCategories = new Set(result.data.map(product => product.category));\n                    setCategories(['all', ...extractedCategories]);\n                } else {\n                    throw new Error('Data is not in expected format');\n                }\n            } catch (error) {\n                console.error('Error fetching products:', error);\n                setError(error.message);\n            }\n        };\n    \n        fetchProducts();\n    }, []);\n\n    const handleAddToCart = (product) => {\n        addToCart(product);\n        // Here you would implement the cart adding animation\n    };\n\n    // Filter products by selected category if not on the home page\n    const visibleProducts = isHomePage\n        ? products.slice(0, 3)\n        : selectedCategory === 'all'\n        ? products\n        : products.filter(product => product.category === selectedCategory);\n\n    return (\n        <Container className=\"catalog-container\">\n            <h2 className=\"catalog-title\">Каталог</h2>\n            {error && <div className=\"alert alert-danger\">Error: {error}</div>}\n            {!isHomePage && (\n                <div className=\"mb-3\">\n                    <select\n                        className=\"select-form\"\n                        value={selectedCategory}\n                        onChange={(e) => setSelectedCategory(e.target.value)}\n                    >\n                        {Array.from(categories).map(category => (\n                            <option key={category} value={category}>\n                                {category}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            )}\n            <Row>\n                {visibleProducts.map(product => (\n                    <Col key={product.id} xs={12} sm={6} md={4} lg={3} className=\"mb-4\">\n                        <Card className=\"product-card\">\n                            <Card.Img variant=\"top\" src={product.image} alt={product.title} />\n                            <Card.Body>\n                                <Card.Title>{product.title}</Card.Title>\n                                <Card.Text>{`${product.price} RUB`}</Card.Text>\n                                <Button variant=\"success\" onClick={() => handleAddToCart(product)}>\n                                    Add to Cart\n                                </Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n        </Container>\n    );\n}\n\nexport default Catalog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}