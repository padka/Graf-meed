{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { CoreAdminContext } from 'ra-core';\nimport { ThemeProvider, ThemesContext, defaultLightTheme } from './theme';\nexport var AdminContext = function (props) {\n  var theme = props.theme,\n    _a = props.lightTheme,\n    lightTheme = _a === void 0 ? defaultLightTheme : _a,\n    darkTheme = props.darkTheme,\n    defaultTheme = props.defaultTheme,\n    children = props.children,\n    rest = __rest(props, [\"theme\", \"lightTheme\", \"darkTheme\", \"defaultTheme\", \"children\"]);\n  return React.createElement(CoreAdminContext, __assign({}, rest), React.createElement(ThemesContext.Provider, {\n    value: {\n      lightTheme: theme || lightTheme,\n      darkTheme: darkTheme,\n      defaultTheme: defaultTheme\n    }\n  }, React.createElement(ThemeProvider, null, children)));\n};\nAdminContext.displayName = 'AdminContext';","map":{"version":3,"names":["React","CoreAdminContext","ThemeProvider","ThemesContext","defaultLightTheme","AdminContext","props","theme","_a","lightTheme","darkTheme","defaultTheme","children","rest","__rest","createElement","__assign","Provider","value","displayName"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/node_modules/ra-ui-materialui/src/AdminContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CoreAdminContext, CoreAdminContextProps } from 'ra-core';\n\nimport {\n    ThemeProvider,\n    ThemesContext,\n    RaThemeOptions,\n    defaultLightTheme,\n} from './theme';\n\nexport const AdminContext = (props: AdminContextProps) => {\n    const {\n        theme,\n        lightTheme = defaultLightTheme,\n        darkTheme,\n        defaultTheme,\n        children,\n        ...rest\n    } = props;\n    return (\n        <CoreAdminContext {...rest}>\n            <ThemesContext.Provider\n                value={{\n                    lightTheme: theme || lightTheme,\n                    darkTheme,\n                    defaultTheme,\n                }}\n            >\n                <ThemeProvider>{children}</ThemeProvider>\n            </ThemesContext.Provider>\n        </CoreAdminContext>\n    );\n};\n\nexport interface AdminContextProps extends CoreAdminContextProps {\n    /**\n     * The material-UI theme to customize the UI\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#theme\n     * @example\n     * import { Admin, defaultTheme } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     *\n     * const theme = {\n     *     ...defaultTheme,\n     *     palette: { mode: 'dark' },\n     * };\n     *\n     * const App = () => (\n     *     <Admin theme={theme} dataProvider={dataProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    theme?: object;\n\n    /**\n     * The material-UI theme to customize the UI. Prefer the theme prop.\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#theme\n     */\n    lightTheme?: RaThemeOptions;\n\n    /**\n     * The material-UI theme to apply to the UI when the dark mode is activated.\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#darktheme\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     * import { darkTheme, lightTheme } from './themes';\n     *\n     * const App = () => (\n     *     <Admin\n     *         dataProvider={dataProvider}\n     *         theme={lightTheme}\n     *         darkTheme={darkTheme}\n     *     >\n     *         ...\n     *     </Admin>\n     * );\n     */\n    darkTheme?: RaThemeOptions;\n\n    /**\n     * The default theme to use when the user hasn't chosen a theme yet.\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#defaulttheme\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     * import { darkTheme, lightTheme } from './themes';\n     *\n     * const App = () => (\n     *     <Admin\n     *         dataProvider={dataProvider}\n     *         theme={lightTheme}\n     *         darkTheme={darkTheme}\n     *         defaultTheme=\"dark\"\n     *     >\n     *         ...\n     *     </Admin>\n     * );\n     */\n    defaultTheme?: 'light' | 'dark';\n}\n\nAdminContext.displayName = 'AdminContext';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAA+B,SAAS;AAEjE,SACIC,aAAa,EACbC,aAAa,EAEbC,iBAAiB,QACd,SAAS;AAEhB,OAAO,IAAMC,YAAY,GAAG,SAAAA,CAACC,KAAwB;EAE7C,IAAAC,KAAK,GAMLD,KAAK,CAAAC,KANA;IACLC,EAAA,GAKAF,KAAK,CAAAG,UALyB;IAA9BA,UAAU,GAAAD,EAAA,cAAGJ,iBAAiB,GAAAI,EAAA;IAC9BE,SAAS,GAITJ,KAAK,CAAAI,SAJI;IACTC,YAAY,GAGZL,KAAK,CAAAK,YAHO;IACZC,QAAQ,GAERN,KAAK,CAAAM,QAFG;IACLC,IAAI,GAAAC,MAAA,CACPR,KAAK,EAPH,gEAOL,CADU;EAEX,OACIN,KAAA,CAAAe,aAAA,CAACd,gBAAgB,EAAAe,QAAA,KAAKH,IAAI,GACtBb,KAAA,CAAAe,aAAA,CAACZ,aAAa,CAACc,QAAQ;IACnBC,KAAK,EAAE;MACHT,UAAU,EAAEF,KAAK,IAAIE,UAAU;MAC/BC,SAAS,EAAAA,SAAA;MACTC,YAAY,EAAAA;;EACf,GAEDX,KAAA,CAAAe,aAAA,CAACb,aAAa,QAAEU,QAAQ,CAAiB,CACpB,CACV;AAE3B,CAAC;AA2EDP,YAAY,CAACc,WAAW,GAAG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}