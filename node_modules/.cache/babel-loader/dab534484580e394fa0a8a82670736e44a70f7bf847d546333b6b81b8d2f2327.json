{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/IntroSection/IntroSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './IntroSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntroSection() {\n  _s();\n  const [introData, setIntroData] = useState({\n    title: '',\n    paragraphs: [],\n    images: []\n  });\n  const [error, setError] = useState(null);\n\n  // Асинхронная функция для загрузки данных\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/api/introSection');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.paragraphs && data.images) {\n        // Парсинг строки JSON в объект\n        data.paragraphs = JSON.parse(data.paragraphs);\n        data.images = JSON.parse(data.images);\n        setIntroData(data);\n      } else {\n        setError('Data format error');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError(error.message);\n    }\n  };\n\n  // Запуск функции fetchData при монтировании компонента\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Отображение ошибки, если она есть\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading Intro Section: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Отображение контента раздела\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"intro-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: introData.title || 'О нашей компании'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), introData.paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: introData.images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: `Изображение ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(IntroSection, \"SdlYIhZo/fCm7IlTITlYsI3aCHE=\");\n_c = IntroSection;\nexport default IntroSection;\nvar _c;\n$RefreshReg$(_c, \"IntroSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","IntroSection","_s","introData","setIntroData","title","paragraphs","images","error","setError","fetchData","response","fetch","ok","Error","status","data","json","JSON","parse","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","paragraph","index","img","src","alt","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/IntroSection/IntroSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './IntroSection.css';\n\nfunction IntroSection() {\n    const [introData, setIntroData] = useState({ title: '', paragraphs: [], images: [] });\n    const [error, setError] = useState(null);\n\n    // Асинхронная функция для загрузки данных\n    const fetchData = async () => {\n        try {\n            const response = await fetch('/api/introSection');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n    \n            if (data.paragraphs && data.images) {\n                // Парсинг строки JSON в объект\n                data.paragraphs = JSON.parse(data.paragraphs);\n                data.images = JSON.parse(data.images);\n                setIntroData(data);\n            } else {\n                setError('Data format error');\n            }\n        } catch (error) {\n            console.error('Error fetching data:', error);\n            setError(error.message);\n        }\n    };\n\n    // Запуск функции fetchData при монтировании компонента\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    // Отображение ошибки, если она есть\n    if (error) {\n        return <div>Error loading Intro Section: {error}</div>;\n    }\n\n    // Отображение контента раздела\n    return (\n        <section className=\"intro-section\">\n            <h2>{introData.title || 'О нашей компании'}</h2>\n            {introData.paragraphs.map((paragraph, index) => (\n                <p key={index}>{paragraph}</p>\n            ))}\n            <div className=\"gallery\">\n                {introData.images.map((img, index) => (\n                    <img key={index} src={img} alt={`Изображение ${index + 1}`} />\n                ))}\n            </div>\n        </section>\n    );\n}\n\nexport default IntroSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}