{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthForm/AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formType, setFormType] = useState('login');\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    email: '',\n    newPassword: ''\n  });\n  const {\n    login,\n    register,\n    isLoading,\n    error,\n    updatePassword\n  } = useAuth();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prevCredentials => ({\n      ...prevCredentials,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (isLoading) return;\n    try {\n      let userRole = null; // Переменная для хранения роли пользователя\n\n      if (formType === 'login') {\n        const user = await login(credentials.username, credentials.password);\n        // Проверяем роль и перенаправляем пользователя\n        userRole = user.role; // Предполагаем, что функция login возвращает объект пользователя, включая его роль\n      } else if (formType === 'register') {\n        const user = await register(credentials.username, credentials.password, credentials.email);\n        // Предполагаем, что после регистрации пользователь автоматически входит в систему и его роль устанавливается\n        userRole = user.role; // Также предполагаем, что функция register возвращает объект пользователя, включая его роль\n        alert('Вы успешно зарегистрированы на сайте!'); // Уведомление пользователя о успешной регистрации\n      } else if (formType === 'reset') {\n        await updatePassword(credentials.username, credentials.newPassword);\n        alert('Ваш пароль был успешно изменен.'); // Уведомление о смене пароля\n        setFormType('login'); // Переключаемся обратно на форму входа после смены пароля\n        return; // Завершаем выполнение функции после смены пароля\n      }\n\n      // Перенаправление в зависимости от роли пользователя\n      if (userRole === 'admin') {\n        navigate('/adminPanel');\n      } else {\n        navigate('/userProfile');\n      }\n    } catch (error) {\n      alert(`Произошла ошибка: ${error.message}`); // Уведомление пользователя об ошибке\n    } finally {\n      // Дополнительные действия после обработки формы, например, остановка индикатора загрузки\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-form-title\",\n        children: formType === 'login' ? 'Вход в систему' : formType === 'register' ? 'Регистрация' : 'Сброс пароля'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [formType === 'register' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: credentials.email,\n            onChange: handleChange,\n            required: formType === 'register',\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: credentials.username,\n            onChange: handleChange,\n            required: true,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), formType !== 'reset' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: credentials.password,\n            onChange: handleChange,\n            required: true,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), formType === 'reset' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            value: credentials.newPassword,\n            onChange: handleChange,\n            required: true,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"gradient-button\",\n          children: isLoading ? 'Загрузка...' : formType === 'login' ? 'Войти' : formType === 'register' ? 'Зарегистрироваться' : 'Сбросить пароль'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"toggle-button\",\n          onClick: () => setFormType(formType === 'login' ? 'register' : 'login'),\n          children: formType === 'login' ? 'Зарегистрироваться' : 'Войти'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), formType !== 'reset' && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"toggle-button\",\n          onClick: () => setFormType('reset'),\n          children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"IvD/HmRWwku4fH+bVZF4k+EycEI=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","AuthForm","_s","navigate","formType","setFormType","credentials","setCredentials","username","password","email","newPassword","login","register","isLoading","error","updatePassword","handleChange","e","name","value","target","prevCredentials","handleSubmit","event","preventDefault","userRole","user","role","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthForm/AuthForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext/AuthContext';\n\nconst AuthForm = () => {\n  const navigate = useNavigate();\n  const [formType, setFormType] = useState('login');\n  const [credentials, setCredentials] = useState({ username: '', password: '', email: '', newPassword: '' });\n  const { login, register, isLoading, error, updatePassword } = useAuth();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials(prevCredentials => ({ ...prevCredentials, [name]: value }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (isLoading) return;\n  \n    try {\n      let userRole = null; // Переменная для хранения роли пользователя\n  \n      if (formType === 'login') {\n        const user = await login(credentials.username, credentials.password);\n        // Проверяем роль и перенаправляем пользователя\n        userRole = user.role; // Предполагаем, что функция login возвращает объект пользователя, включая его роль\n      } else if (formType === 'register') {\n        const user = await register(credentials.username, credentials.password, credentials.email);\n        // Предполагаем, что после регистрации пользователь автоматически входит в систему и его роль устанавливается\n        userRole = user.role; // Также предполагаем, что функция register возвращает объект пользователя, включая его роль\n        alert('Вы успешно зарегистрированы на сайте!'); // Уведомление пользователя о успешной регистрации\n      } else if (formType === 'reset') {\n        await updatePassword(credentials.username, credentials.newPassword);\n        alert('Ваш пароль был успешно изменен.'); // Уведомление о смене пароля\n        setFormType('login'); // Переключаемся обратно на форму входа после смены пароля\n        return; // Завершаем выполнение функции после смены пароля\n      }\n  \n      // Перенаправление в зависимости от роли пользователя\n      if (userRole === 'admin') {\n        navigate('/adminPanel');\n      } else {\n        navigate('/userProfile');\n      }\n    } catch (error) {\n      alert(`Произошла ошибка: ${error.message}`); // Уведомление пользователя об ошибке\n    } finally {\n      // Дополнительные действия после обработки формы, например, остановка индикатора загрузки\n    }\n  };\n\n  return (\n    <div className=\"auth-form-wrapper\">\n      <div className=\"auth-form-container\">\n        <h2 className=\"auth-form-title\">\n          {formType === 'login' ? 'Вход в систему' : formType === 'register' ? 'Регистрация' : 'Сброс пароля'}\n        </h2>\n        <form onSubmit={handleSubmit}>\n          {formType === 'register' && (\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={credentials.email}\n                onChange={handleChange}\n                required={formType === 'register'}\n                disabled={isLoading}\n              />\n            </div>\n          )}\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Имя пользователя</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={credentials.username}\n              onChange={handleChange}\n              required\n              disabled={isLoading}\n            />\n          </div>\n          {formType !== 'reset' && (\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Пароль</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={credentials.password}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n          )}\n          {formType === 'reset' && (\n            <div className=\"form-group\">\n              <label htmlFor=\"newPassword\">Новый пароль</label>\n              <input\n                type=\"password\"\n                id=\"newPassword\"\n                name=\"newPassword\"\n                value={credentials.newPassword}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n          )}\n          {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\n          <button type=\"submit\" className=\"gradient-button\">\n            {isLoading ? 'Загрузка...' : formType === 'login' ? 'Войти' : formType === 'register' ? 'Зарегистрироваться' : 'Сбросить пароль'}\n          </button>\n          <button type=\"button\" className=\"toggle-button\" onClick={() => setFormType(formType === 'login' ? 'register' : 'login')}>\n            {formType === 'login' ? 'Зарегистрироваться' : 'Войти'}\n          </button>\n          {formType !== 'reset' && (\n            <button type=\"button\" className=\"toggle-button\" onClick={() => setFormType('reset')}>\n              Забыли пароль?\n            </button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}