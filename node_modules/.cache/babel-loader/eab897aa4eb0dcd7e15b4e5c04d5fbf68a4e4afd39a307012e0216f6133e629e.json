{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    token: null\n  });\n\n  // Асинхронная функция для входа пользователя\n  const login = useCallback(async (username, password) => {\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const {\n        token\n      } = await response.json();\n      setAuthState({\n        token\n      }); // Сохраняем токен в состоянии\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Login failed: ' + error.message);\n    }\n  }, []);\n\n  // Функция для выхода пользователя\n  const logout = useCallback(() => {\n    setAuthState({\n      token: null\n    }); // Очищаем токен из состояния\n  }, []);\n\n  // Объект контекста с текущим состоянием аутентификации и функциями для входа и выхода\n  const contextValue = {\n    authState,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n// Хук для удобного доступа к контексту аутентификации\n_s(AuthProvider, \"lYB8LCQ+Gpxxap7y65G/R+0Czzs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authState","setAuthState","token","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","alert","message","logout","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({ token: null });\n\n  // Асинхронная функция для входа пользователя\n  const login = useCallback(async (username, password) => {\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n\n      const { token } = await response.json();\n      setAuthState({ token }); // Сохраняем токен в состоянии\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Login failed: ' + error.message);\n    }\n  }, []);\n\n  // Функция для выхода пользователя\n  const logout = useCallback(() => {\n    setAuthState({ token: null }); // Очищаем токен из состояния\n  }, []);\n\n  // Объект контекста с текущим состоянием аутентификации и функциями для входа и выхода\n  const contextValue = {\n    authState,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Хук для удобного доступа к контексту аутентификации\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE;EAAK,CAAC,CAAC;;EAE3D;EACA,MAAMC,KAAK,GAAGV,WAAW,CAAC,OAAOW,QAAQ,EAAEC,QAAQ,KAAK;IACtD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC/CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;MAEA,MAAM;QAAEZ;MAAM,CAAC,GAAG,MAAMI,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvCd,YAAY,CAAC;QAAEC;MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCE,KAAK,CAAC,gBAAgB,GAAGF,KAAK,CAACG,OAAO,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,MAAM,GAAG3B,WAAW,CAAC,MAAM;IAC/BQ,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMmB,YAAY,GAAG;IACnBrB,SAAS;IACTG,KAAK;IACLiB;EACF,CAAC;EAED,oBACEzB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAvB,QAAA,EACvCA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA5B,EAAA,CA7CaF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA8CzB,OAAO,MAAMgC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACI,WAAW,CAAC;AAAA;AAACkC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}