{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const [orderStatus, setOrderStatus] = useState(null);\n  useEffect(() => {\n    // Загрузка корзины с сервера при инициализации\n    const fetchCart = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await fetch('/api/cart', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setCartItems(data);\n          }\n        } catch (error) {\n          console.error('Ошибка при загрузке корзины:', error);\n        }\n      }\n    };\n    fetchCart();\n  }, []);\n  const addToCart = async product => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      await fetch('/api/cart/add', {\n        method: 'POST',\n        body: JSON.stringify({\n          productId: product.id,\n          quantity: 1\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setCartItems(prevItems => {\n        const existingItem = prevItems.find(item => item.id === product.id);\n        if (existingItem) {\n          return prevItems.map(item => item.id === product.id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item);\n        }\n        return [...prevItems, {\n          ...product,\n          quantity: 1,\n          imageUrl: product.image\n        }];\n      });\n    } catch (error) {\n      console.error('Ошибка при добавлении товара в корзину:', error);\n    }\n  };\n  const removeItem = async productId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      await fetch(`/api/cart/remove/${productId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n    } catch (error) {\n      console.error('Ошибка при удалении товара из корзины:', error);\n    }\n  };\n  const placeOrder = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setOrderStatus('unauthenticated');\n      return;\n    }\n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      return;\n    }\n    setOrderStatus('processing');\n    try {\n      const response = await fetch('/api/orders/placeOrder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          items: cartItems\n        })\n      });\n      if (response.status === 429) {\n        setOrderStatus('too-many-requests');\n      } else if (!response.ok) {\n        throw new Error(`Ошибка: ${response.status}`);\n      }\n      setCartItems([]);\n      setOrderStatus('success');\n    } catch (error) {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeItem,\n      placeOrder,\n      orderStatus,\n      setOrderStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"hJiHcljHKbpuT6TXLdA8TDgZCnY=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","orderStatus","setOrderStatus","fetchCart","token","localStorage","getItem","response","fetch","headers","ok","data","json","error","console","addToCart","product","method","body","JSON","stringify","productId","id","quantity","prevItems","existingItem","find","item","map","imageUrl","image","removeItem","filter","placeOrder","length","items","status","Error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst CartContext = createContext(null);\n\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [orderStatus, setOrderStatus] = useState(null);\n\n  useEffect(() => {\n    // Загрузка корзины с сервера при инициализации\n    const fetchCart = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await fetch('/api/cart', {\n            headers: { 'Authorization': `Bearer ${token}` },\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setCartItems(data);\n          }\n        } catch (error) {\n          console.error('Ошибка при загрузке корзины:', error);\n        }\n      }\n    };\n\n    fetchCart();\n  }, []);\n\n  const addToCart = async (product) => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n\n    try {\n      await fetch('/api/cart/add', {\n        method: 'POST',\n        body: JSON.stringify({ productId: product.id, quantity: 1 }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      setCartItems((prevItems) => {\n        const existingItem = prevItems.find((item) => item.id === product.id);\n        if (existingItem) {\n          return prevItems.map((item) =>\n            item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n          );\n        }\n        return [...prevItems, { ...product, quantity: 1, imageUrl: product.image }];\n      });\n    } catch (error) {\n      console.error('Ошибка при добавлении товара в корзину:', error);\n    }\n  };\n\n  const removeItem = async (productId) => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n\n    try {\n      await fetch(`/api/cart/remove/${productId}`, {\n        method: 'DELETE',\n        headers: { 'Authorization': `Bearer ${token}` },\n      });\n\n      setCartItems((prevItems) => prevItems.filter((item) => item.id !== productId));\n    } catch (error) {\n      console.error('Ошибка при удалении товара из корзины:', error);\n    }\n  };\n\n  const placeOrder = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setOrderStatus('unauthenticated');\n      return;\n    }\n\n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      return;\n    }\n\n    setOrderStatus('processing');\n\n    try {\n      const response = await fetch('/api/orders/placeOrder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({ items: cartItems }),\n      });\n\n      if (response.status === 429) {\n        setOrderStatus('too-many-requests');\n      } else if (!response.ok) {\n        throw new Error(`Ошибка: ${response.status}`);\n      }\n\n      setCartItems([]);\n      setOrderStatus('success');\n    } catch (error) {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cartItems,\n      addToCart,\n      removeItem,\n      placeOrder,\n      orderStatus,\n      setOrderStatus\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpDE,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;YACxCC,OAAO,EAAE;cAAE,eAAe,EAAG,UAASL,KAAM;YAAE;UAChD,CAAC,CAAC;UACF,IAAIG,QAAQ,CAACG,EAAE,EAAE;YACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;YAClCZ,YAAY,CAACW,IAAI,CAAC;UACpB;QACF,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;MACF;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,SAAS,GAAG,MAAOC,OAAO,IAAK;IACnC,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMI,KAAK,CAAC,eAAe,EAAE;QAC3BS,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,SAAS,EAAEL,OAAO,CAACM,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;QAC5Dd,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASL,KAAM;QACnC;MACF,CAAC,CAAC;MAEFJ,YAAY,CAAEwB,SAAS,IAAK;QAC1B,MAAMC,YAAY,GAAGD,SAAS,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;QACrE,IAAIG,YAAY,EAAE;UAChB,OAAOD,SAAS,CAACI,GAAG,CAAED,IAAI,IACxBA,IAAI,CAACL,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;YAAE,GAAGK,IAAI;YAAEJ,QAAQ,EAAEI,IAAI,CAACJ,QAAQ,GAAG;UAAE,CAAC,GAAGI,IACtE,CAAC;QACH;QACA,OAAO,CAAC,GAAGH,SAAS,EAAE;UAAE,GAAGR,OAAO;UAAEO,QAAQ,EAAE,CAAC;UAAEM,QAAQ,EAAEb,OAAO,CAACc;QAAM,CAAC,CAAC;MAC7E,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE;EACF,CAAC;EAED,MAAMkB,UAAU,GAAG,MAAOV,SAAS,IAAK;IACtC,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMI,KAAK,CAAE,oBAAmBa,SAAU,EAAC,EAAE;QAC3CJ,MAAM,EAAE,QAAQ;QAChBR,OAAO,EAAE;UAAE,eAAe,EAAG,UAASL,KAAM;QAAE;MAChD,CAAC,CAAC;MAEFJ,YAAY,CAAEwB,SAAS,IAAKA,SAAS,CAACQ,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKD,SAAS,CAAC,CAAC;IAChF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAED,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAM7B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVF,cAAc,CAAC,iBAAiB,CAAC;MACjC;IACF;IAEA,IAAIH,SAAS,CAACmC,MAAM,KAAK,CAAC,EAAE;MAC1BhC,cAAc,CAAC,OAAO,CAAC;MACvB;IACF;IAEAA,cAAc,CAAC,YAAY,CAAC;IAE5B,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDS,MAAM,EAAE,MAAM;QACdR,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASL,KAAM;QACnC,CAAC;QACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEe,KAAK,EAAEpC;QAAU,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAIQ,QAAQ,CAAC6B,MAAM,KAAK,GAAG,EAAE;QAC3BlC,cAAc,CAAC,mBAAmB,CAAC;MACrC,CAAC,MAAM,IAAI,CAACK,QAAQ,CAACG,EAAE,EAAE;QACvB,MAAM,IAAI2B,KAAK,CAAE,WAAU9B,QAAQ,CAAC6B,MAAO,EAAC,CAAC;MAC/C;MAEApC,YAAY,CAAC,EAAE,CAAC;MAChBE,cAAc,CAAC,SAAS,CAAC;IAC3B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDX,cAAc,CAAC,OAAO,CAAC;IACzB;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAAC6C,QAAQ;IAACC,KAAK,EAAE;MAC3BxC,SAAS;MACTgB,SAAS;MACTgB,UAAU;MACVE,UAAU;MACVhC,WAAW;MACXC;IACF,CAAE;IAAAL,QAAA,EACCA;EAAQ;IAAA2C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7C,GAAA,CAxHWF,YAAY;AAAAgD,EAAA,GAAZhD,YAAY;AA0HzB,eAAeH,WAAW;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}