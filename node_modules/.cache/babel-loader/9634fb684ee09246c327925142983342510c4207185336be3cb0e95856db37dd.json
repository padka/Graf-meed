{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/Catalog/Catalog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useCart } from '../CartContext/CartContext';\nimport './Catalog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Catalog({\n  isHomePage\n}) {\n  _s();\n  const {\n    addToCart\n  } = useCart();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setError(null);\n      try {\n        const response = await fetch('/api/products');\n        if (!response.ok) {\n          throw new Error(`HTTP error: status ${response.status}`);\n        }\n        const result = await response.json();\n        if (result.success && Array.isArray(result.data)) {\n          setProducts(result.data);\n          // Получаем уникальные категории из списка продуктов\n          const categories = Array.from(new Set(result.data.map(p => p.category)));\n          setCategories(categories);\n        } else {\n          throw new Error('Data is not in expected format');\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setError(error.message);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleAddToCart = product => {\n    addToCart(product);\n    // TODO: Реализовать анимацию добавления в корзину\n  };\n\n  // Фильтруем продукты по выбранной категории\n  const filteredProducts = products.filter(product => selectedCategory === 'all' || product.category === selectedCategory);\n\n  // Ограничиваем количество продуктов для главной страницы\n  const displayedProducts = isHomePage ? filteredProducts.slice(0, 3) : filteredProducts;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"catalog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"catalog-title\",\n      children: \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), !isHomePage && /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select-form\",\n      value: selectedCategory,\n      onChange: e => setSelectedCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category,\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: displayedProducts.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"product-card\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: product.image,\n            alt: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: `${product.price} RUB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), !isHomePage && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => handleAddToCart(product),\n              children: \"Add to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Catalog, \"Z+D0wHf8lnmy6Rd+F2Xq6/EmqH8=\", false, function () {\n  return [useCart];\n});\n_c = Catalog;\nexport default Catalog;\nvar _c;\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","useCart","jsxDEV","_jsxDEV","Catalog","isHomePage","_s","addToCart","products","setProducts","categories","setCategories","selectedCategory","setSelectedCategory","error","setError","fetchProducts","response","fetch","ok","Error","status","result","json","success","Array","isArray","data","from","Set","map","p","category","console","message","handleAddToCart","product","filteredProducts","filter","displayedProducts","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Alert","variant","value","onChange","e","target","xs","sm","md","lg","Img","src","image","alt","title","Body","Title","Text","price","onClick","id","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/Catalog/Catalog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useCart } from '../CartContext/CartContext';\nimport './Catalog.css';\n\nfunction Catalog({ isHomePage }) {\n    const { addToCart } = useCart();\n    const [products, setProducts] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('all');\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            setError(null);\n            try {\n                const response = await fetch('/api/products');\n                if (!response.ok) {\n                    throw new Error(`HTTP error: status ${response.status}`);\n                }\n                const result = await response.json();\n                if (result.success && Array.isArray(result.data)) {\n                    setProducts(result.data);\n                    // Получаем уникальные категории из списка продуктов\n                    const categories = Array.from(new Set(result.data.map(p => p.category)));\n                    setCategories(categories);\n                } else {\n                    throw new Error('Data is not in expected format');\n                }\n            } catch (error) {\n                console.error('Error fetching products:', error);\n                setError(error.message);\n            }\n        };\n    \n        fetchProducts();\n    }, []);\n\n    const handleAddToCart = (product) => {\n        addToCart(product);\n        // TODO: Реализовать анимацию добавления в корзину\n    };\n\n    // Фильтруем продукты по выбранной категории\n    const filteredProducts = products.filter(product => \n        selectedCategory === 'all' || product.category === selectedCategory\n    );\n\n    // Ограничиваем количество продуктов для главной страницы\n    const displayedProducts = isHomePage ? filteredProducts.slice(0, 3) : filteredProducts;\n\n    return (\n        <Container className=\"catalog-container\">\n            <h2 className='catalog-title'>Каталог</h2>\n            {error && <Alert variant=\"danger\">Error: {error}</Alert>}\n            {!isHomePage && (\n                <select\n                    className=\"select-form\"\n                    value={selectedCategory}\n                    onChange={(e) => setSelectedCategory(e.target.value)}\n                >\n                    <option value=\"all\">Все категории</option>\n                    {categories.map(category => (\n                        <option key={category} value={category}>{category}</option>\n                    ))}\n                </select>\n            )}\n            <Row>\n                {displayedProducts.map(product => (\n                    <Col key={product.id} xs={12} sm={6} md={4} lg={3} className=\"mb-4\">\n                        <Card className=\"product-card\">\n                            <Card.Img variant=\"top\" src={product.image} alt={product.title} />\n                            <Card.Body>\n                                <Card.Title>{product.title}</Card.Title>\n                                <Card.Text>{`${product.price} RUB`}</Card.Text>\n                                {!isHomePage && (\n                                    <Button variant=\"success\" onClick={() => handleAddToCart(product)}>Add to Cart</Button>\n                                )}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n        </Container>\n    );\n}\n\nexport default Catalog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}