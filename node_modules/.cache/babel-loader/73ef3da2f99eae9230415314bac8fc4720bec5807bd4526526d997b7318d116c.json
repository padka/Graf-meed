{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nconst authApi = {\n  register: async (username, email, password) => {\n    const response = await fetch('/api/users/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка регистрации.');\n    }\n    return response.json();\n  },\n  login: async (username, password) => {\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка входа.');\n    }\n    return response.json();\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    isLoading: false,\n    error: null\n  });\n  const setAuthInfo = ({\n    token,\n    user\n  }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthState({\n      token,\n      user,\n      isLoading: false,\n      error: null\n    });\n  };\n  const clearAuthInfo = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthState({\n      token: null,\n      user: null,\n      isLoading: false,\n      error: null\n    });\n  };\n  const register = async (username, email, password) => {\n    try {\n      setAuthState({\n        ...authState,\n        isLoading: true\n      });\n      const {\n        token,\n        user\n      } = await authApi.register(username, email, password);\n      setAuthInfo({\n        token,\n        user\n      });\n    } catch (error) {\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: error.message\n      });\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      setAuthState({\n        ...authState,\n        isLoading: true\n      });\n      const {\n        token,\n        user\n      } = await authApi.login(username, password);\n      setAuthInfo({\n        token,\n        user\n      });\n    } catch (error) {\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: error.message\n      });\n    }\n  };\n  const logout = () => {\n    clearAuthInfo();\n  };\n  const contextValue = {\n    ...authState,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YMrDiaUlz/ygMbFzPWbGVQKPUBQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","authApi","register","username","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","login","AuthProvider","children","_s","authState","setAuthState","token","localStorage","getItem","user","parse","isLoading","error","setAuthInfo","setItem","clearAuthInfo","removeItem","logout","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nexport const AuthContext = createContext(null);\n\nconst authApi = {\n  register: async (username, email, password) => {\n    const response = await fetch('/api/users/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, email, password }),\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка регистрации.');\n    }\n    return response.json();\n  },\n  login: async (username, password) => {\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка входа.');\n    }\n    return response.json();\n  },\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    isLoading: false,\n    error: null,\n  });\n\n  const setAuthInfo = ({ token, user }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthState({\n      token,\n      user,\n      isLoading: false,\n      error: null,\n    });\n  };\n\n  const clearAuthInfo = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthState({\n      token: null,\n      user: null,\n      isLoading: false,\n      error: null,\n    });\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      setAuthState({ ...authState, isLoading: true });\n      const { token, user } = await authApi.register(username, email, password);\n      setAuthInfo({ token, user });\n    } catch (error) {\n      setAuthState({ ...authState, isLoading: false, error: error.message });\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      setAuthState({ ...authState, isLoading: true });\n      const { token, user } = await authApi.login(username, password);\n      setAuthInfo({ token, user });\n    } catch (error) {\n      setAuthState({ ...authState, isLoading: false, error: error.message });\n    }\n  };\n\n  const logout = () => {\n    clearAuthInfo();\n  };\n\n  const contextValue = {\n    ...authState,\n    login,\n    logout,\n    register,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}