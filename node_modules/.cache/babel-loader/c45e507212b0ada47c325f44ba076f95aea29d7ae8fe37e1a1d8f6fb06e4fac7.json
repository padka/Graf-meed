{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(); // Создаем контекст аутентификации\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  // Получаем токен из localStorage\n  isLoading: false,\n  error: null\n};\n\n// Определяем reducer для управления состоянием аутентификации\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'REQUEST':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token); // Сохраняем токен в localStorage\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        isLoading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('token'); // Удаляем токен из localStorage\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: null\n      };\n    case 'ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    // Функция для инициализации аутентификации\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await fetch('/api/users/validateToken', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (!response.ok) {\n            throw new Error('Token validation failed');\n          }\n          const {\n            user\n          } = await response.json(); // Получаем пользователя из ответа\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              token,\n              user\n            }\n          }); // Обновляем состояние\n        } catch (error) {\n          localStorage.removeItem('token'); // Удаляем невалидный токен\n          dispatch({\n            type: 'LOGOUT'\n          }); // Обновляем состояние на \"выход из системы\"\n        }\n      }\n    };\n\n    initializeAuth(); // Вызываем функцию при монтировании компонента\n  }, []);\n\n  // Функции для аутентификации, регистрации и выхода из системы\n  const login = async (username, password) => {\n    dispatch({\n      type: 'REQUEST'\n    });\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(error);\n      }\n      const {\n        token,\n        user\n      } = await response.json();\n      localStorage.setItem('token', token); // Сохраняем новый токен\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error.toString()\n      });\n    }\n  };\n  const register = async (username, password, email) => {\n    dispatch({\n      type: 'REQUEST'\n    });\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          email\n        })\n      });\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(error);\n      }\n      const {\n        token,\n        user\n      } = await response.json();\n      localStorage.setItem('token', token); // Сохраняем новый токен\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error.toString()\n      });\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    }); // Обработка выхода из системы\n  };\n\n  // Создаем значение для контекста\n  const authContextValue = {\n    ...state,\n    login,\n    register,\n    logout\n  };\n\n  // Провайдер контекста оборачивает дочерние компоненты\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 10\n  }, this);\n};\n\n// Хук для использования контекста аутентификации\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","initialState","isAuthenticated","user","token","localStorage","getItem","isLoading","error","authReducer","state","action","type","setItem","payload","removeItem","AuthProvider","children","_s","dispatch","initializeAuth","response","fetch","method","headers","ok","Error","json","login","username","password","body","JSON","stringify","text","toString","register","email","logout","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nexport const AuthContext = createContext(); // Создаем контекст аутентификации\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'), // Получаем токен из localStorage\n  isLoading: false,\n  error: null,\n};\n\n// Определяем reducer для управления состоянием аутентификации\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'REQUEST':\n      return { ...state, isLoading: true, error: null };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token); // Сохраняем токен в localStorage\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        isLoading: false,\n        error: null,\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('token'); // Удаляем токен из localStorage\n      return { ...state, isAuthenticated: false, user: null, token: null, error: null };\n    case 'ERROR':\n      return { ...state, isLoading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    // Функция для инициализации аутентификации\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await fetch('/api/users/validateToken', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n          });\n          if (!response.ok) {\n            throw new Error('Token validation failed');\n          }\n          const { user } = await response.json(); // Получаем пользователя из ответа\n          dispatch({ type: 'LOGIN_SUCCESS', payload: { token, user } }); // Обновляем состояние\n        } catch (error) {\n          localStorage.removeItem('token'); // Удаляем невалидный токен\n          dispatch({ type: 'LOGOUT' }); // Обновляем состояние на \"выход из системы\"\n        }\n      }\n    };\n    initializeAuth(); // Вызываем функцию при монтировании компонента\n  }, []);\n\n  // Функции для аутентификации, регистрации и выхода из системы\n  const login = async (username, password) => {\n    dispatch({ type: 'REQUEST' });\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(error);\n      }\n\n      const { token, user } = await response.json();\n      localStorage.setItem('token', token); // Сохраняем новый токен\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { token, user } });\n    } catch (error) {\n      dispatch({ type: 'ERROR', payload: error.toString() });\n    }\n  };\n\n  const register = async (username, password, email) => {\n    dispatch({ type: 'REQUEST' });\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email }),\n      });\n\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(error);\n      }\n\n      const { token, user } = await response.json();\n      localStorage.setItem('token', token); // Сохраняем новый токен\n      dispatch({ type: 'REGISTER_SUCCESS', payload: { token, user } });\n    } catch (error) {\n      dispatch({ type: 'ERROR', payload: error.toString() });\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' }); // Обработка выхода из системы\n  };\n\n  // Создаем значение для контекста\n  const authContextValue = {\n    ...state,\n    login,\n    register,\n    logout,\n  };\n\n  // Провайдер контекста оборачивает дочерние компоненты\n  return <AuthContext.Provider value={authContextValue}>{children}</AuthContext.Provider>;\n};\n\n// Хук для использования контекста аутентификации\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC,CAAC,CAAC;;AAE5C,MAAMO,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAAE;EACtCC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QAAE,GAAGF,KAAK;QAAEH,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACnD,KAAK,eAAe;IACpB,KAAK,kBAAkB;MACrBH,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACG,OAAO,CAACV,KAAK,CAAC,CAAC,CAAC;MACrD,OAAO;QACL,GAAGM,KAAK;QACRR,eAAe,EAAE,IAAI;QACrBC,IAAI,EAAEQ,MAAM,CAACG,OAAO,CAACX,IAAI;QACzBC,KAAK,EAAEO,MAAM,CAACG,OAAO,CAACV,KAAK;QAC3BG,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,QAAQ;MACXH,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;MAClC,OAAO;QAAE,GAAGL,KAAK;QAAER,eAAe,EAAE,KAAK;QAAEC,IAAI,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEI,KAAK,EAAE;MAAK,CAAC;IACnF,KAAK,OAAO;MACV,OAAO;QAAE,GAAGE,KAAK;QAAEH,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAEG,MAAM,CAACG;MAAQ,CAAC;IAC9D;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACR,KAAK,EAAES,QAAQ,CAAC,GAAGvB,UAAU,CAACa,WAAW,EAAER,YAAY,CAAC;EAE/DJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,EAAE;YACvDC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,eAAe,EAAG,UAASpB,KAAM;YACnC;UACF,CAAC,CAAC;UACF,IAAI,CAACiB,QAAQ,CAACI,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;UAC5C;UACA,MAAM;YAAEvB;UAAK,CAAC,GAAG,MAAMkB,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;UACxCR,QAAQ,CAAC;YAAEP,IAAI,EAAE,eAAe;YAAEE,OAAO,EAAE;cAAEV,KAAK;cAAED;YAAK;UAAE,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdH,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;UAClCI,QAAQ,CAAC;YAAEP,IAAI,EAAE;UAAS,CAAC,CAAC,CAAC,CAAC;QAChC;MACF;IACF,CAAC;;IACDQ,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1CX,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAU,CAAC,CAAC;IAC7B,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC/CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACT,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAMjB,KAAK,GAAG,MAAMa,QAAQ,CAACa,IAAI,CAAC,CAAC;QACnC,MAAM,IAAIR,KAAK,CAAClB,KAAK,CAAC;MACxB;MAEA,MAAM;QAAEJ,KAAK;QAAED;MAAK,CAAC,GAAG,MAAMkB,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC7CtB,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC,CAAC,CAAC;MACtCe,QAAQ,CAAC;QAAEP,IAAI,EAAE,eAAe;QAAEE,OAAO,EAAE;UAAEV,KAAK;UAAED;QAAK;MAAE,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdW,QAAQ,CAAC;QAAEP,IAAI,EAAE,OAAO;QAAEE,OAAO,EAAEN,KAAK,CAAC2B,QAAQ,CAAC;MAAE,CAAC,CAAC;IACxD;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOP,QAAQ,EAAEC,QAAQ,EAAEO,KAAK,KAAK;IACpDlB,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAU,CAAC,CAAC;IAC7B,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;QAClDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ,QAAQ;UAAEC,QAAQ;UAAEO;QAAM,CAAC;MACpD,CAAC,CAAC;MAEF,IAAI,CAAChB,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAMjB,KAAK,GAAG,MAAMa,QAAQ,CAACa,IAAI,CAAC,CAAC;QACnC,MAAM,IAAIR,KAAK,CAAClB,KAAK,CAAC;MACxB;MAEA,MAAM;QAAEJ,KAAK;QAAED;MAAK,CAAC,GAAG,MAAMkB,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC7CtB,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC,CAAC,CAAC;MACtCe,QAAQ,CAAC;QAAEP,IAAI,EAAE,kBAAkB;QAAEE,OAAO,EAAE;UAAEV,KAAK;UAAED;QAAK;MAAE,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdW,QAAQ,CAAC;QAAEP,IAAI,EAAE,OAAO;QAAEE,OAAO,EAAEN,KAAK,CAAC2B,QAAQ,CAAC;MAAE,CAAC,CAAC;IACxD;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBnB,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAS,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED;EACA,MAAM2B,gBAAgB,GAAG;IACvB,GAAG7B,KAAK;IACRkB,KAAK;IACLQ,QAAQ;IACRE;EACF,CAAC;;EAED;EACA,oBAAOvC,OAAA,CAACC,WAAW,CAACwC,QAAQ;IAACC,KAAK,EAAEF,gBAAiB;IAAAtB,QAAA,EAAEA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACzF,CAAC;;AAED;AAAA3B,EAAA,CA3FaF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA4FzB,OAAO,MAAM+B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrD,UAAU,CAACK,WAAW,CAAC;AAAA;AAACgD,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}