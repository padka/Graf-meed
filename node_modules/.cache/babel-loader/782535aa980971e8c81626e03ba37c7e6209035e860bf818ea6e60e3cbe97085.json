{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  token: null,\n  user: null,\n  isLoading: false,\n  error: null,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  updateProfile: () => {},\n  resetPassword: () => {}\n});\nconst authApi = {\n  register: async (username, email, password) => {\n    const response = await fetch('/api/users/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка регистрации.');\n    }\n    return await response.json();\n  },\n  login: async (username, password) => {\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка входа.');\n    }\n    return await response.json();\n  },\n  updateProfile: async (token, userData) => {\n    const response = await fetch('/api/users/update-profile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка обновления профиля.');\n    }\n    return await response.json();\n  },\n  resetPassword: async email => {\n    const response = await fetch('/api/users/reset-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка сброса пароля.');\n    }\n    return await response.json();\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    isLoading: false,\n    error: null\n  });\n  const setAuthInfo = useCallback(({\n    token,\n    user\n  }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthState({\n      token,\n      user,\n      isLoading: false,\n      error: null\n    });\n  }, []);\n  const clearAuthInfo = useCallback(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthState({\n      token: null,\n      user: null,\n      isLoading: false,\n      error: null\n    });\n  }, []);\n  const register = useCallback(async (username, email, password) => {\n    try {\n      setAuthState({\n        ...authState,\n        isLoading: true\n      });\n      const {\n        token,\n        user\n      } = await authApi.register(username, email, password);\n      setAuthInfo({\n        token,\n        user\n      });\n    } catch (error) {\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: error.message\n      });\n    }\n  }, [authState, setAuthInfo]);\n  const login = useCallback(async (username, password) => {\n    try {\n      setAuthState({\n        ...authState,\n        isLoading: true\n      });\n      const {\n        token,\n        user\n      } = await authApi.login(username, password);\n      setAuthInfo({\n        token,\n        user\n      });\n    } catch (error) {\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: error.message\n      });\n    }\n  }, [authState, setAuthInfo]);\n  const logout = useCallback(() => {\n    clearAuthInfo();\n  }, [clearAuthInfo]);\n  const updateProfile = useCallback(async userData => {\n    try {\n      setAuthState({\n        ...authState,\n        isLoading: true\n      });\n      const data = await authApi.updateProfile(authState.token, userData);\n      setAuthInfo({\n        token: authState.token,\n        user: data.user\n      });\n    } catch (error) {\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: error.message\n      });\n    }\n  }, [authState, setAuthInfo]);\n  const resetPassword = useCallback(async email => {\n    try {\n      setAuthState({\n        ...authState,\n        isLoading: true\n      });\n      await authApi.resetPassword(email);\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: null\n      });\n    } catch (error) {\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: error.message\n      });\n    }\n  }, [authState]);\n  const contextValue = {\n    ...authState,\n    login,\n    logout,\n    register,\n    updateProfile,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Mffp+L/MIVQLeIzROgK8Q1kuPsw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","AuthContext","token","user","isLoading","error","login","logout","register","updateProfile","resetPassword","authApi","username","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","userData","AuthProvider","children","_s","authState","setAuthState","localStorage","getItem","parse","setAuthInfo","setItem","clearAuthInfo","removeItem","data","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\n\nexport const AuthContext = createContext({\n  token: null,\n  user: null,\n  isLoading: false,\n  error: null,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  updateProfile: () => {},\n  resetPassword: () => {},\n});\n\nconst authApi = {\n  register: async (username, email, password) => {\n    const response = await fetch('/api/users/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, email, password }),\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка регистрации.');\n    }\n    return await response.json();\n  },\n  login: async (username, password) => {\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка входа.');\n    }\n    return await response.json();\n  },\n  updateProfile: async (token, userData) => {\n    const response = await fetch('/api/users/update-profile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка обновления профиля.');\n    }\n    return await response.json();\n  },\n  resetPassword: async (email) => {\n    const response = await fetch('/api/users/reset-password', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email }),\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Ошибка сброса пароля.');\n    }\n    return await response.json();\n  },\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    isLoading: false,\n    error: null,\n  });\n\n  const setAuthInfo = useCallback(({ token, user }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthState({\n      token,\n      user,\n      isLoading: false,\n      error: null,\n    });\n  }, []);\n\n  const clearAuthInfo = useCallback(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthState({\n      token: null,\n      user: null,\n      isLoading: false,\n      error: null,\n    });\n  }, []);\n\n  const register = useCallback(async (username, email, password) => {\n    try {\n      setAuthState({ ...authState, isLoading: true });\n      const { token, user } = await authApi.register(username, email, password);\n      setAuthInfo({ token, user });\n    } catch (error) {\n      setAuthState({ ...authState, isLoading: false, error: error.message });\n    }\n  }, [authState, setAuthInfo]);\n\n  const login = useCallback(async (username, password) => {\n    try {\n      setAuthState({ ...authState, isLoading: true });\n      const { token, user } = await authApi.login(username, password);\n      setAuthInfo({ token, user });\n    } catch (error) {\n      setAuthState({ ...authState, isLoading: false, error: error.message });\n    }\n  }, [authState, setAuthInfo]);\n\n  const logout = useCallback(() => {\n    clearAuthInfo();\n  }, [clearAuthInfo]);\n\n  const updateProfile = useCallback(async (userData) => {\n    try {\n      setAuthState({ ...authState, isLoading: true });\n      const data = await authApi.updateProfile(authState.token, userData);\n      setAuthInfo({ token: authState.token, user: data.user });\n    } catch (error) {\n      setAuthState({ ...authState, isLoading: false, error: error.message });\n    }\n  }, [authState, setAuthInfo]);\n\n  const resetPassword = useCallback(async (email) => {\n    try {\n      setAuthState({ ...authState, isLoading: true });\n      await authApi.resetPassword(email);\n      setAuthState({ ...authState, isLoading: false, error: null });\n    } catch (error) {\n      setAuthState({ ...authState, isLoading: false, error: error.message });\n    }\n  }, [authState]);\n\n  const contextValue = {\n    ...authState,\n    login,\n    logout,\n    register,\n    updateProfile,\n    resetPassword,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}