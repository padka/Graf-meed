{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst getUserIdFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null; // Изменил на null для более явного указания отсутствия пользователя\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.userId;\n  } catch (error) {\n    console.error(\"Ошибка при обработке токена:\", error);\n    return null;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState(getUserIdFromToken());\n  const [isUserAuthenticated, setIsUserAuthenticated] = useState(!!userId);\n  const [orderStatus, setOrderStatus] = useState(null);\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const handleTokenChange = () => {\n      const newUserId = getUserIdFromToken();\n      setIsUserAuthenticated(!!newUserId);\n      setUserId(newUserId);\n      const savedCart = localStorage.getItem(`cart-${newUserId || 'anonymous'}`);\n      setCartItems(savedCart ? JSON.parse(savedCart) : []);\n    };\n\n    // Подписываемся на событие изменения localStorage\n    window.addEventListener('storage', handleTokenChange);\n\n    // Вызываем функцию при монтировании компонента\n    handleTokenChange();\n\n    // Отписываемся от события при размонтировании компонента\n    return () => window.removeEventListener('storage', handleTokenChange);\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      localStorage.setItem(`cart-${userId}`, JSON.stringify(cartItems));\n    }\n  }, [userId, cartItems]);\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const itemIndex = prevItems.findIndex(item => item.id === product.id);\n      if (itemIndex !== -1) {\n        const updatedItems = [...prevItems];\n        updatedItems[itemIndex].quantity += 1;\n        return updatedItems;\n      }\n      return [...prevItems, {\n        ...product,\n        quantity: 1\n      }];\n    });\n  };\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: Math.max(1, quantity)\n    } : item));\n  };\n  const removeItem = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n  const placeOrder = async () => {\n    if (!isUserAuthenticated) {\n      navigate('../AuthForm');\n      return;\n    }\n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      return;\n    }\n    setOrderStatus('processing');\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('/api/orders/placeOrder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          items: cartItems\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Ошибка: ${response.statusText}`);\n      }\n      const result = await response.json(); // Предполагаем, что сервер возвращает результат в JSON\n      setCartItems([]); // Очищаем корзину после успешного оформления заказа\n      setOrderStatus('success');\n      navigate('/ordersuccess'); // Перенаправляем пользователя на страницу успешного оформления заказа\n    } catch (error) {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      updateQuantity,\n      removeItem,\n      placeOrder,\n      orderStatus,\n      isUserAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"hebyidKWW8X9P0wdxS5XG9FMr8c=\", false, function () {\n  return [useNavigate];\n});\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jsxDEV","_jsxDEV","CartContext","useCart","_s","getUserIdFromToken","token","localStorage","getItem","payload","JSON","parse","atob","split","userId","error","console","CartProvider","children","_s2","navigate","setUserId","isUserAuthenticated","setIsUserAuthenticated","orderStatus","setOrderStatus","cartItems","setCartItems","handleTokenChange","newUserId","savedCart","window","addEventListener","removeEventListener","setItem","stringify","addToCart","product","prevItems","itemIndex","findIndex","item","id","updatedItems","quantity","updateQuantity","productId","map","Math","max","removeItem","filter","placeOrder","length","response","fetch","method","headers","body","items","ok","Error","statusText","result","json","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst CartContext = createContext();\n\nexport const useCart = () => useContext(CartContext);\n\nconst getUserIdFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null; // Изменил на null для более явного указания отсутствия пользователя\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.userId;\n  } catch (error) {\n    console.error(\"Ошибка при обработке токена:\", error);\n    return null;\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState(getUserIdFromToken());\n  const [isUserAuthenticated, setIsUserAuthenticated] = useState(!!userId);\n  const [orderStatus, setOrderStatus] = useState(null);\n  const [cartItems, setCartItems] = useState([]);\n\n  useEffect(() => {\n    const handleTokenChange = () => {\n      const newUserId = getUserIdFromToken();\n      setIsUserAuthenticated(!!newUserId);\n      setUserId(newUserId);\n      const savedCart = localStorage.getItem(`cart-${newUserId || 'anonymous'}`);\n      setCartItems(savedCart ? JSON.parse(savedCart) : []);\n    };\n\n    // Подписываемся на событие изменения localStorage\n    window.addEventListener('storage', handleTokenChange);\n\n    // Вызываем функцию при монтировании компонента\n    handleTokenChange();\n\n    // Отписываемся от события при размонтировании компонента\n    return () => window.removeEventListener('storage', handleTokenChange);\n  }, []);\n\n  useEffect(() => {\n    if (userId) {\n      localStorage.setItem(`cart-${userId}`, JSON.stringify(cartItems));\n    }\n  }, [userId, cartItems]);\n\n  const addToCart = (product) => {\n    setCartItems(prevItems => {\n      const itemIndex = prevItems.findIndex(item => item.id === product.id);\n      if (itemIndex !== -1) {\n        const updatedItems = [...prevItems];\n        updatedItems[itemIndex].quantity += 1;\n        return updatedItems;\n      }\n      return [...prevItems, { ...product, quantity: 1 }];\n    });\n  };\n\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.id === productId ? { ...item, quantity: Math.max(1, quantity) } : item\n      )\n    );\n  };\n\n  const removeItem = (productId) => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n\n  const placeOrder = async () => {\n    if (!isUserAuthenticated) {\n      navigate('../AuthForm');\n      return;\n    }\n  \n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      return;\n    }\n  \n    setOrderStatus('processing');\n    const token = localStorage.getItem('token');\n    \n    try {\n      const response = await fetch('/api/orders/placeOrder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ items: cartItems }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`Ошибка: ${response.statusText}`);\n      }\n  \n      const result = await response.json(); // Предполагаем, что сервер возвращает результат в JSON\n      setCartItems([]); // Очищаем корзину после успешного оформления заказа\n      setOrderStatus('success');\n      navigate('/ordersuccess'); // Перенаправляем пользователя на страницу успешного оформления заказа\n    } catch (error) {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cartItems,\n      addToCart,\n      updateQuantity,\n      removeItem,\n      placeOrder,\n      orderStatus,\n      isUserAuthenticated,\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}