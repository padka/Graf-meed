{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    token: null,\n    user: null,\n    isLoading: false,\n    error: null\n  });\n\n  // Централизованная функция для обновления состояния\n  const updateAuthState = useCallback(updates => {\n    setAuthState(prevState => ({\n      ...prevState,\n      ...updates\n    }));\n  }, []);\n\n  // Асинхронная функция для регистрации пользователя\n  const register = useCallback(async (username, email, password) => {\n    updateAuthState({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errMessage = await response.text();\n        throw new Error(errMessage || 'Registration failed');\n      }\n      const {\n        token,\n        user\n      } = await response.json();\n      updateAuthState({\n        token,\n        user,\n        isLoading: false\n      });\n    } catch (error) {\n      updateAuthState({\n        isLoading: false,\n        error: error.message\n      });\n    }\n  }, []);\n\n  // Асинхронная функция для входа пользователя\n  const login = useCallback(async (username, password) => {\n    updateAuthState({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errMessage = await response.text();\n        throw new Error(errMessage || 'Login failed');\n      }\n      const {\n        token,\n        user\n      } = await response.json();\n      updateAuthState({\n        token,\n        user,\n        isLoading: false\n      });\n    } catch (error) {\n      updateAuthState({\n        isLoading: false,\n        error: error.message\n      });\n    }\n  }, []);\n\n  // Функция для выхода пользователя\n  const logout = useCallback(() => {\n    updateAuthState({\n      token: null,\n      user: null,\n      error: null\n    });\n  }, []);\n\n  // Объект контекста\n  const contextValue = {\n    ...authState,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n\n// Хук для доступа к контексту аутентификации\n_s(AuthProvider, \"5x97wWAIhSlDayxA/B4Zjjx+vSU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authState","setAuthState","token","user","isLoading","error","updateAuthState","updates","prevState","register","username","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errMessage","text","Error","json","message","login","logout","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    token: null,\n    user: null,\n    isLoading: false,\n    error: null,\n  });\n\n  // Централизованная функция для обновления состояния\n  const updateAuthState = useCallback((updates) => {\n    setAuthState((prevState) => ({ ...prevState, ...updates }));\n  }, []);\n\n  // Асинхронная функция для регистрации пользователя\n  const register = useCallback(async (username, email, password) => {\n    updateAuthState({ isLoading: true, error: null });\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, email, password }),\n      });\n\n      if (!response.ok) {\n        const errMessage = await response.text();\n        throw new Error(errMessage || 'Registration failed');\n      }\n\n      const { token, user } = await response.json();\n      updateAuthState({ token, user, isLoading: false });\n    } catch (error) {\n      updateAuthState({ isLoading: false, error: error.message });\n    }\n  }, []);\n\n  // Асинхронная функция для входа пользователя\n  const login = useCallback(async (username, password) => {\n    updateAuthState({ isLoading: true, error: null });\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.ok) {\n        const errMessage = await response.text();\n        throw new Error(errMessage || 'Login failed');\n      }\n\n      const { token, user } = await response.json();\n      updateAuthState({ token, user, isLoading: false });\n    } catch (error) {\n      updateAuthState({ isLoading: false, error: error.message });\n    }\n  }, []);\n\n  // Функция для выхода пользователя\n  const logout = useCallback(() => {\n    updateAuthState({ token: null, user: null, error: null });\n  }, []);\n\n  // Объект контекста\n  const contextValue = { ...authState, login, logout, register };\n\n  return <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>;\n};\n\n// Хук для доступа к контексту аутентификации\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}