{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/IntroSection/IntroSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './IntroSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntroSection() {\n  _s();\n  const [introData, setIntroData] = useState({\n    title: '',\n    sections: [],\n    images: [] // Инициализируем как пустой массив\n  });\n\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/introSection');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setIntroData({\n          title: data.paragraphs.title,\n          sections: data.paragraphs.sections ? data.paragraphs.sections : [],\n          images: data.images.images ? data.images.images : []\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading Intro Section: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"intro-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: introData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), introData.sections.map(index => /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: introData.images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: `Gallery item ${index + 1}`,\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-text\",\n          children: introData.sections[index] ? introData.sections[index].header : \"Описание недоступно\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(IntroSection, \"UqIacaRfVhmH00qPpk11MOTjRgk=\");\n_c = IntroSection;\nexport default IntroSection;\nvar _c;\n$RefreshReg$(_c, \"IntroSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","IntroSection","_s","introData","setIntroData","title","sections","images","error","setError","fetchData","response","fetch","ok","Error","status","data","json","paragraphs","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","img","src","alt","loading","header","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/IntroSection/IntroSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './IntroSection.css';\n\nfunction IntroSection() {\n    const [introData, setIntroData] = useState({\n        title: '',\n        sections: [],\n        images: [] // Инициализируем как пустой массив\n    });\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch('/api/introSection');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n\n                setIntroData({\n                    title: data.paragraphs.title,\n                    sections: data.paragraphs.sections ? data.paragraphs.sections : [],\n                    images: data.images.images ? data.images.images : [],\n                });\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setError(error.message);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    if (error) {\n        return <div>Error loading Intro Section: {error}</div>;\n    }\n\n    return (\n        <section className=\"intro-section\">\n            <h2>{introData.title}</h2>\n            {introData.sections.map(( index) => (\n                <div key={index}>\n                  \n                </div>\n            ))}\n            <div className=\"gallery\">\n                {introData.images.map((img, index) => (\n                    <div className=\"image-container\" key={index}>\n                        <img src={img} alt={`Gallery item ${index + 1}`} loading=\"lazy\" />\n                        <div className=\"image-text\">\n                            {introData.sections[index] ? introData.sections[index].header : \"Описание недоступно\"}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n}\n\nexport default IntroSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}