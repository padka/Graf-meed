{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormGroup from '@mui/material/FormGroup';\nimport Switch from '@mui/material/Switch';\nimport { FieldTitle, useInput } from 'ra-core';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\nimport { InputPropTypes } from './InputPropTypes';\nexport var BooleanInput = function (props) {\n  var className = props.className,\n    _a = props.row,\n    row = _a === void 0 ? false : _a,\n    _b = props.defaultValue,\n    defaultValue = _b === void 0 ? false : _b,\n    format = props.format,\n    label = props.label,\n    fullWidth = props.fullWidth,\n    helperText = props.helperText,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onFocus = props.onFocus,\n    disabled = props.disabled,\n    parse = props.parse,\n    resource = props.resource,\n    source = props.source,\n    validate = props.validate,\n    _c = props.options,\n    options = _c === void 0 ? defaultOptions : _c,\n    sx = props.sx,\n    rest = __rest(props, [\"className\", \"row\", \"defaultValue\", \"format\", \"label\", \"fullWidth\", \"helperText\", \"onBlur\", \"onChange\", \"onFocus\", \"disabled\", \"parse\", \"resource\", \"source\", \"validate\", \"options\", \"sx\"]);\n  var _d = useInput(__assign({\n      defaultValue: defaultValue,\n      format: format,\n      parse: parse,\n      resource: resource,\n      source: source,\n      onBlur: onBlur,\n      onChange: onChange,\n      type: 'checkbox',\n      validate: validate\n    }, rest)),\n    id = _d.id,\n    field = _d.field,\n    isRequired = _d.isRequired,\n    _e = _d.fieldState,\n    error = _e.error,\n    invalid = _e.invalid,\n    isTouched = _e.isTouched,\n    isSubmitted = _d.formState.isSubmitted;\n  var handleChange = useCallback(function (event) {\n    field.onChange(event);\n    // Ensure field is considered as touched\n    field.onBlur();\n  }, [field]);\n  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;\n  return React.createElement(FormGroup, {\n    className: clsx('ra-input', \"ra-input-\".concat(source), className),\n    row: row,\n    sx: sx\n  }, React.createElement(FormControlLabel, {\n    inputRef: field.ref,\n    control: React.createElement(Switch, __assign({\n      id: id,\n      name: field.name,\n      onChange: handleChange,\n      onFocus: onFocus,\n      checked: Boolean(field.value)\n    }, sanitizeInputRestProps(rest), options, {\n      disabled: disabled\n    })),\n    label: React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    })\n  }), renderHelperText ? React.createElement(FormHelperText, {\n    error: (isTouched || isSubmitted) && invalid\n  }, React.createElement(InputHelperText, {\n    touched: isTouched || isSubmitted,\n    error: error === null || error === void 0 ? void 0 : error.message,\n    helperText: helperText\n  })) : null);\n};\nBooleanInput.propTypes = __assign(__assign({}, InputPropTypes), {\n  // @ts-ignore\n  options: PropTypes.shape(Switch.propTypes),\n  disabled: PropTypes.bool\n});\nvar defaultOptions = {};","map":{"version":3,"names":["React","useCallback","PropTypes","clsx","FormControlLabel","FormHelperText","FormGroup","Switch","FieldTitle","useInput","sanitizeInputRestProps","InputHelperText","InputPropTypes","BooleanInput","props","className","_a","row","_b","defaultValue","format","label","fullWidth","helperText","onBlur","onChange","onFocus","disabled","parse","resource","source","validate","_c","options","defaultOptions","sx","rest","__rest","_d","__assign","type","id","field","isRequired","_e","fieldState","error","invalid","isTouched","isSubmitted","formState","handleChange","event","renderHelperText","createElement","concat","inputRef","ref","control","name","checked","Boolean","value","touched","message","propTypes","shape","bool"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/node_modules/ra-ui-materialui/src/input/BooleanInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormGroup, { FormGroupProps } from '@mui/material/FormGroup';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport { FieldTitle, useInput } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\nimport { InputPropTypes } from './InputPropTypes';\n\nexport const BooleanInput = (props: BooleanInputProps) => {\n    const {\n        className,\n        row = false,\n        defaultValue = false,\n        format,\n        label,\n        fullWidth,\n        helperText,\n        onBlur,\n        onChange,\n        onFocus,\n        disabled,\n        parse,\n        resource,\n        source,\n        validate,\n        options = defaultOptions,\n        sx,\n        ...rest\n    } = props;\n    const {\n        id,\n        field,\n        isRequired,\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n    } = useInput({\n        defaultValue,\n        format,\n        parse,\n        resource,\n        source,\n        onBlur,\n        onChange,\n        type: 'checkbox',\n        validate,\n        ...rest,\n    });\n\n    const handleChange = useCallback(\n        event => {\n            field.onChange(event);\n            // Ensure field is considered as touched\n            field.onBlur();\n        },\n        [field]\n    );\n\n    const renderHelperText =\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\n\n    return (\n        <FormGroup\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            row={row}\n            sx={sx}\n        >\n            <FormControlLabel\n                inputRef={field.ref}\n                control={\n                    <Switch\n                        id={id}\n                        name={field.name}\n                        onChange={handleChange}\n                        onFocus={onFocus}\n                        checked={Boolean(field.value)}\n                        {...sanitizeInputRestProps(rest)}\n                        {...options}\n                        disabled={disabled}\n                    />\n                }\n                label={\n                    <FieldTitle\n                        label={label}\n                        source={source}\n                        resource={resource}\n                        isRequired={isRequired}\n                    />\n                }\n            />\n            {renderHelperText ? (\n                <FormHelperText error={(isTouched || isSubmitted) && invalid}>\n                    <InputHelperText\n                        touched={isTouched || isSubmitted}\n                        error={error?.message}\n                        helperText={helperText}\n                    />\n                </FormHelperText>\n            ) : null}\n        </FormGroup>\n    );\n};\n\nBooleanInput.propTypes = {\n    ...InputPropTypes,\n    // @ts-ignore\n    options: PropTypes.shape(Switch.propTypes),\n    disabled: PropTypes.bool,\n};\n\nexport type BooleanInputProps = CommonInputProps &\n    SwitchProps &\n    Omit<FormGroupProps, 'defaultValue' | 'onChange' | 'onBlur' | 'onFocus'> & {\n        options?: SwitchProps;\n    };\n\nconst defaultOptions = {};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}