{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst getUserIdFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  try {\n    const decodedToken = jwtDecode(token);\n    return decodedToken.id;\n  } catch (error) {\n    console.error(\"Ошибка при обработке токена:\", error);\n    return null;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState(getUserIdFromToken());\n  const [cartItems, setCartItems] = useState([]);\n\n  // Этот useEffect теперь следит только за изменениями токена.\n  useEffect(() => {\n    const newUserId = getUserIdFromToken();\n    setUserId(newUserId);\n    const savedCart = localStorage.getItem(newUserId ? `cart-${newUserId}` : 'cart');\n    setCartItems(savedCart ? JSON.parse(savedCart) : []);\n  }, [localStorage.getItem('token')]); // Изменил зависимость на токен\n\n  // Сохраняем состояние корзины в localStorage каждый раз, когда изменяется cartItems или userId.\n  useEffect(() => {\n    localStorage.setItem(userId ? `cart-${userId}` : 'cart', JSON.stringify(cartItems));\n  }, [userId, cartItems]);\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const itemIndex = prevItems.findIndex(item => item.id === product.id);\n      if (itemIndex !== -1) {\n        const updatedItems = [...prevItems];\n        updatedItems[itemIndex].quantity += 1;\n        return updatedItems;\n      }\n      return [...prevItems, {\n        ...product,\n        quantity: 1\n      }];\n    });\n  };\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: Math.max(1, quantity)\n    } : item));\n  };\n  const removeItem = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n  const placeOrder = async () => {\n    if (!isUserAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      return;\n    }\n    setOrderStatus('processing');\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('/api/orders/placeOrder', {\n        method: 'POST',\n        body: JSON.stringify({\n          items: cartItems\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.status === 429) {\n        setOrderStatus('too-many-requests');\n        return;\n      }\n      if (!response.ok) {\n        throw new Error(`Ошибка: ${response.status}`);\n      }\n      setCartItems([]);\n      setOrderStatus('success');\n    } catch (error) {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      updateQuantity,\n      removeItem,\n      placeOrder,\n      isUserAuthenticated: !!userId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"IZY0/jh/xyc9C2gyN9JzOKpAdNA=\", false, function () {\n  return [useNavigate];\n});\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jwtDecode","jsxDEV","_jsxDEV","CartContext","useCart","_s","getUserIdFromToken","token","localStorage","getItem","decodedToken","id","error","console","CartProvider","children","_s2","navigate","userId","setUserId","cartItems","setCartItems","newUserId","savedCart","JSON","parse","setItem","stringify","addToCart","product","prevItems","itemIndex","findIndex","item","updatedItems","quantity","updateQuantity","productId","map","Math","max","removeItem","filter","placeOrder","isUserAuthenticated","length","setOrderStatus","response","fetch","method","body","items","headers","status","ok","Error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst CartContext = createContext();\n\nexport const useCart = () => useContext(CartContext);\n\nconst getUserIdFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  try {\n    const decodedToken = jwtDecode(token);\n    return decodedToken.id;\n  } catch (error) {\n    console.error(\"Ошибка при обработке токена:\", error);\n    return null;\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState(getUserIdFromToken());\n  const [cartItems, setCartItems] = useState([]);\n\n  // Этот useEffect теперь следит только за изменениями токена.\n  useEffect(() => {\n    const newUserId = getUserIdFromToken();\n    setUserId(newUserId);\n    const savedCart = localStorage.getItem(newUserId ? `cart-${newUserId}` : 'cart');\n    setCartItems(savedCart ? JSON.parse(savedCart) : []);\n  }, [localStorage.getItem('token')]); // Изменил зависимость на токен\n\n  // Сохраняем состояние корзины в localStorage каждый раз, когда изменяется cartItems или userId.\n  useEffect(() => {\n    localStorage.setItem(userId ? `cart-${userId}` : 'cart', JSON.stringify(cartItems));\n  }, [userId, cartItems]);\n\n  const addToCart = (product) => {\n    setCartItems(prevItems => {\n      const itemIndex = prevItems.findIndex(item => item.id === product.id);\n      if (itemIndex !== -1) {\n        const updatedItems = [...prevItems];\n        updatedItems[itemIndex].quantity += 1;\n        return updatedItems;\n      }\n      return [...prevItems, { ...product, quantity: 1 }];\n    });\n  };\n\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.id === productId ? { ...item, quantity: Math.max(1, quantity) } : item\n      )\n    );\n  };\n\n  const removeItem = (productId) => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n\n  const placeOrder = async () => {\n    if (!isUserAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      return;\n    }\n\n    setOrderStatus('processing');\n    const token = localStorage.getItem('token');\n    \n    try {\n      const response = await fetch('/api/orders/placeOrder', {\n        method: 'POST',\n        body: JSON.stringify({ items: cartItems }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      });\n\n      if (response.status === 429) {\n        setOrderStatus('too-many-requests');\n        return;\n      }\n\n      if (!response.ok) {\n        throw new Error(`Ошибка: ${response.status}`);\n      }\n\n      setCartItems([]);\n      setOrderStatus('success');\n    } catch (error) {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cartItems,\n      addToCart,\n      updateQuantity,\n      removeItem,\n      placeOrder,\n      isUserAuthenticated: !!userId,\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}