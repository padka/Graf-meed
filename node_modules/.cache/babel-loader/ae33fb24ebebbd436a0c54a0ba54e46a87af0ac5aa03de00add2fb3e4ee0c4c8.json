{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Хук для использования контекста корзины\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const [orderStatus, setOrderStatus] = useState(null);\n\n  // Загрузка корзины из localStorage при инициализации\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Сохранение состояния корзины в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Проверка наличия токена для определения статуса аутентификации пользователя\n  const isUserAuthenticated = () => localStorage.getItem('token') != null;\n\n  // Добавление товара в корзину\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      // Увеличение количества существующего товара\n      return existingItem ? prevItems.map(item => item.id === product.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item) : [...prevItems, {\n        ...product,\n        quantity: 1\n      }]; // Добавление нового товара\n    });\n  };\n\n  // Обновление количества товара в корзине\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: Math.max(1, quantity)\n    } : item));\n  };\n\n  // Удаление товара из корзины\n  const removeItem = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n\n  // Оформление заказа\n  const placeOrder = () => {\n    if (!isUserAuthenticated()) {\n      setOrderStatus('unauthenticated');\n      // Редирект на страницу входа или показ модального окна\n      // redirect('/login') или showModal('login')\n      return;\n    }\n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      // Отображение сообщения о пустой корзине\n      return;\n    }\n    setOrderStatus('processing');\n    const token = localStorage.getItem('token');\n\n    // Отправка запроса на сервер для оформления заказа\n    fetch('/api/orders/placeOrder', {\n      method: 'POST',\n      body: JSON.stringify({\n        items: cartItems\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && {\n          'Authorization': `Bearer ${token}`\n        })\n      }\n    }).then(response => {\n      if (response.status === 429) {\n        setOrderStatus('too-many-requests');\n      } else if (!response.ok) {\n        throw new Error(`Ошибка: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setCartItems([]);\n      setOrderStatus('success');\n    }).catch(error => {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    });\n  };\n\n  // Возвращаемый JSX контекста\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      updateQuantity,\n      removeItem,\n      placeOrder,\n      orderStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"NCLV5fJk6nNMXaJ2hDIVtz9ZstQ=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","orderStatus","setOrderStatus","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","isUserAuthenticated","addToCart","product","prevItems","existingItem","find","item","id","map","quantity","updateQuantity","productId","Math","max","removeItem","filter","placeOrder","length","token","fetch","method","body","items","headers","then","response","status","ok","Error","json","data","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/CartContext/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst CartContext = createContext();\n\n// Хук для использования контекста корзины\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [orderStatus, setOrderStatus] = useState(null);\n\n  // Загрузка корзины из localStorage при инициализации\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Сохранение состояния корзины в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Проверка наличия токена для определения статуса аутентификации пользователя\n  const isUserAuthenticated = () => localStorage.getItem('token') != null;\n\n  // Добавление товара в корзину\n  const addToCart = (product) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      // Увеличение количества существующего товара\n      return existingItem\n        ? prevItems.map(item => \n            item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item)\n        : [...prevItems, { ...product, quantity: 1 }]; // Добавление нового товара\n    });\n  };\n\n  // Обновление количества товара в корзине\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(prevItems => \n      prevItems.map(item => \n        item.id === productId ? { ...item, quantity: Math.max(1, quantity) } : item\n      )\n    );\n  };\n\n  // Удаление товара из корзины\n  const removeItem = (productId) => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n\n  // Оформление заказа\n  const placeOrder = () => {\n    if (!isUserAuthenticated()) {\n      setOrderStatus('unauthenticated');\n      // Редирект на страницу входа или показ модального окна\n      // redirect('/login') или showModal('login')\n      return;\n    }\n\n    if (cartItems.length === 0) {\n      setOrderStatus('empty');\n      // Отображение сообщения о пустой корзине\n      return;\n    }\n\n    setOrderStatus('processing');\n    const token = localStorage.getItem('token');\n    \n    // Отправка запроса на сервер для оформления заказа\n    fetch('/api/orders/placeOrder', {\n      method: 'POST',\n      body: JSON.stringify({ items: cartItems }),\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && { 'Authorization': `Bearer ${token}` })\n      },\n    })\n    .then(response => {\n      if (response.status === 429) {\n        setOrderStatus('too-many-requests');\n      } else if (!response.ok) {\n        throw new Error(`Ошибка: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      setCartItems([]);\n      setOrderStatus('success');\n    })\n    .catch(error => {\n      console.error('Ошибка при оформлении заказа:', error);\n      setOrderStatus('error');\n    });\n  };\n\n  // Возвращаемый JSX контекста\n  return (\n    <CartContext.Provider value={{\n      cartItems,\n      addToCart,\n      updateQuantity,\n      removeItem,\n      placeOrder,\n      orderStatus\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}