{"ast":null,"code":"var _jsxFileName = \"/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'REQUEST':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isLoading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        error: null\n      };\n    case 'ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Здесь можно дополнительно проверить валидность токена\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user: null\n        }\n      });\n    }\n  }, []);\n  const login = async (username, password) => {\n    dispatch({\n      type: 'REQUEST'\n    });\n    try {\n      // Замените URL на ваш API endpoint\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) throw new Error('Login failed');\n      const data = await response.json();\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const register = async (username, password, email) => {\n    dispatch({\n      type: 'REQUEST'\n    });\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          email\n        })\n      });\n      if (!response.ok) throw new Error('Registration failed');\n      const data = await response.json();\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const updatePassword = async (username, newPassword) => {\n    dispatch({\n      type: 'REQUEST'\n    });\n    try {\n      const response = await fetch('/api/users/updatePassword', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          newPassword\n        })\n      });\n      if (!response.ok) throw new Error('Password update failed');\n      const data = await response.json();\n      // Обновление пароля не меняет состояние аутентификации, но может потребоваться обработка успеха\n      console.log('Password updated successfully', data);\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const authContextValue = {\n    ...state,\n    login,\n    register,\n    updatePassword,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","isLoading","error","authReducer","state","action","type","localStorage","setItem","payload","removeItem","AuthProvider","children","_s","dispatch","getItem","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","message","register","email","updatePassword","newPassword","console","log","logout","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/padkas2001gmail.com/Desktop/isis/src/components/AuthContext/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  error: null,\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'REQUEST':\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isLoading: false,\n        error: null,\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        error: null,\n      };\n    case 'ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Здесь можно дополнительно проверить валидность токена\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { token, user: null } });\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    dispatch({ type: 'REQUEST' });\n    try {\n      // Замените URL на ваш API endpoint\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.ok) throw new Error('Login failed');\n\n      const data = await response.json();\n      dispatch({ type: 'LOGIN_SUCCESS', payload: data });\n    } catch (error) {\n      dispatch({ type: 'ERROR', payload: error.message });\n    }\n  };\n\n  const register = async (username, password, email) => {\n    dispatch({ type: 'REQUEST' });\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email }),\n      });\n\n      if (!response.ok) throw new Error('Registration failed');\n\n      const data = await response.json();\n      dispatch({ type: 'REGISTER_SUCCESS', payload: data });\n    } catch (error) {\n      dispatch({ type: 'ERROR', payload: error.message });\n    }\n  };\n\n  const updatePassword = async (username, newPassword) => {\n    dispatch({ type: 'REQUEST' });\n    try {\n      const response = await fetch('/api/users/updatePassword', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, newPassword }),\n      });\n\n      if (!response.ok) throw new Error('Password update failed');\n\n      const data = await response.json();\n      // Обновление пароля не меняет состояние аутентификации, но может потребоваться обработка успеха\n      console.log('Password updated successfully', data);\n    } catch (error) {\n      dispatch({ type: 'ERROR', payload: error.message });\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const authContextValue = {\n    ...state,\n    login,\n    register,\n    updatePassword,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}